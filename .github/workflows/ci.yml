name: Smoke

on:
  workflow_dispatch:
  pull_request:

jobs:
  unix:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      PIP_DOWNLOAD_CACHE: ${{ github.workspace }}/../.pip_download_cache
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Ubuntu build deps
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y libgirepository1.0-dev gir1.2-gtk-3.0 python3-gi

    - name: Install deps with brew
      if: runner.os == 'macOS'
      run: |
        brew install gtk+3 gobject-introspection gtk-mac-integration

    - name: Add python requirements
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Run tests
      run: |
        tox -e py

    - name: Build sdist/wheel
      run: |
        tox -e build

  msys2:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: setup-msys2
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          git
          mingw-w64-x86_64-gtk3
          mingw-w64-x86_64-python
          mingw-w64-x86_64-python-gobject
          mingw-w64-x86_64-python-pip
          mingw-w64-x86_64-python-certifi
          mingw-w64-x86_64-python-coverage
          mingw-w64-x86_64-python-entrypoints
          mingw-w64-x86_64-python-toml

    - name: Install additional dependencies
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        pip3 install tornado<5.0.0 coverage twisted trio==0.17.0 PyGObject

    - name: Run tests
      shell: msys2 {0}
      run: |
        MSYSTEM= coverage run setup.py test
        MSYSTEM= coverage report
