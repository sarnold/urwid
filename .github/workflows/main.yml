name: Wheels

on:
  workflow_dispatch:
#  pull_request:
#  push:
#    branches:
#      - master

jobs:
  cibw_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: choco install vcpython27 -f -y

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.9.0
        env:
          # configure cibuildwheel to build native archs ('auto'), and some
          # emulated ones; remove the cp27 from SKIP to enable py27 wheels
          # (note this takes a long time even without py27)
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_SKIP: "cp27-* cp34-* pp27-* *-win32"
          CIBW_TEST_COMMAND: python -c "import urwid.tests"

      - uses: actions/upload-artifact@v2
        with:
          name: cibw-wheels
          path: ./wheelhouse/*.whl

  check_artifacts:
    defaults:
      run:
        shell: bash
    name: Check artifacts are correct
    needs: [cibw_wheels]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2

      # note wheels should be in subdirectory <upload_name>
      - name: Check number of downloaded artifacts
        run: |
          .github/workflows/wheel-check.sh 52
